{"version":3,"sources":["store/constant.js","App/components/MainCard.js","App/components/UcFirst.js","Demo/UIElements/Basic/Button.js"],"names":["DEMO","BLANK_LINK","MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","Component","windowSize","UcFirst","string","text","charAt","toUpperCase","slice","React","BasicButton","buttonVariants","buttonOptions","variant","icon","basicButtons","map","idx","overlay","outlineButtons","squareButtons","basicDropdownButton","button","eventKey","splitDropdownButton","Divider"],"mappings":"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","file":"static/js/17.f5c9314e.chunk.js","sourcesContent":["const DEMO = {\r\n    BLANK_LINK: \"#!\",\r\n};\r\n\r\nexport default DEMO;","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;","import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    ButtonToolbar,\r\n    Dropdown,\r\n    DropdownButton,\r\n    SplitButton\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../App/components/MainCard\";\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\n\r\nclass BasicButton extends React.Component {\r\n    render() {\r\n        const buttonVariants = [\r\n            'primary',\r\n            'secondary',\r\n            'success',\r\n            'danger',\r\n            'warning',\r\n            'info',\r\n            'light',\r\n            'dark',\r\n        ];\r\n\r\n        const buttonOptions = [\r\n            {variant: 'primary', icon:'feather icon-thumbs-up'},\r\n            {variant: 'secondary', icon:'feather icon-camera'},\r\n            {variant: 'success', icon:'feather icon-check-circle'},\r\n            {variant: 'danger', icon:'feather icon-slash'},\r\n            {variant: 'warning', icon:'feather icon-alert-triangle'},\r\n            {variant: 'info', icon:'feather icon-info'}\r\n        ];\r\n\r\n        const basicButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\r\n                <Button variant={variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const outlineButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-'+variant}</Tooltip>}>\r\n                <Button variant={'outline-'+variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const squareButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-square' variant={variant}><UcFirst text={variant} /></Button>);\r\n\r\n\r\n        const basicDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n        const splitDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <SplitButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-split-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className=\"mr-2 mb-2\"\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </SplitButton>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Default\">\r\n                            <p>use <code>variant=\"*\"</code> props in component <code>Button</code> to get various button</p>\r\n                            {basicButtons}\r\n                            <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\r\n                                <Button variant=\"link\">Link</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                        <Card title=\"Outline\">\r\n                            <p>use <code>variant=\"outline-*\"</code> props in component <code>Button</code> to get various outline button</p>\r\n                            {outlineButtons}\r\n                        </Card>\r\n                        <Card title=\"Square Button\">\r\n                            <p>use <code>className=\"btn-square\"</code> props in component <code>Button</code> to get square button</p>\r\n                            {squareButtons}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Basic Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicButton;\r\n"],"sourceRoot":""}